$breakpoits: (
  xs: 360px,
  sm: 768px,
  md: 1024px,
  lg: 1280px,
  xl: 1600px,
);

$orientations: all, portrait, landscape;

@mixin device-up($breakpoint, $orientation: null) {
  $size: get-breakpoint($breakpoint);
  $mediaQuery: 'screen and (min-width: #{$size})';
  @if $orientation {
    $mediaQuery: '#{$mediaQuery} and (orientation: #{get-orientation($orientation)})';
  }
  @media #{$mediaQuery} {
    @content;
  }
}

@mixin device-down($breakpoint, $orientation: null) {
  $size: (get-breakpoint($breakpoint) + 0)-1px;
  $mediaQuery: 'screen and (max-width: #{$size})';
  @if $orientation {
    $mediaQuery: '#{$mediaQuery} and (orientation: #{get-orientation($orientation)})';
  }
  @media #{$mediaQuery} {
    @content;
  }
}

@mixin device-between($breakpointMin, $breakpointMax, $orientation: null) {
  $sizeMin: get-breakpoint($breakpointMin);
  $sizeMax: (get-breakpoint($breakpointMax) + 0)-1px;

  $mediaQuery: 'screen and (min-width: #{$sizeMin}) and (max-width: #{$sizeMax})';
  @if $orientation {
    $mediaQuery: '#{$mediaQuery} and (orientation: #{get-orientation($orientation)})';
  }
  @media #{$mediaQuery} {
    @content;
  }
}

@mixin device-landscape {
  @media screen and (orientation: landscape) {
    @content;
  }
}

@function get-breakpoint($key) {
  @if map.has-key($breakpoints, $key) {
    @return map.get($breakpoints, $key);
  }
  @error "Sorry, but `#{$key}` is not a valid value for $breakpoints `#{map.keys($breakpoints)}`";
}

@function get-orientation($key) {
  $key: list.index($orientations, $key);
  @if $key {
    @return list.nth($orientations, $key);
  }
  @error "Sorry, but `#{$key}` is not a valid value for $orientations `#{$orientations}`";
}
